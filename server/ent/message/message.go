// Code generated by entc, DO NOT EDIT.

package message

const (
	// Label holds the string label denoting the message type in the database.
	Label = "message"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// FieldTime holds the string denoting the time field in the database.
	FieldTime = "time"
	// FieldLocalID holds the string denoting the local_id field in the database.
	FieldLocalID = "local_id"
	// FieldCanBeDeleted holds the string denoting the can_be_deleted field in the database.
	FieldCanBeDeleted = "can_be_deleted"
	// EdgeReceivers holds the string denoting the receivers edge name in mutations.
	EdgeReceivers = "receivers"
	// EdgeSender holds the string denoting the sender edge name in mutations.
	EdgeSender = "sender"
	// Table holds the table name of the message in the database.
	Table = "messages"
	// ReceiversTable is the table that holds the receivers relation/edge. The primary key declared below.
	ReceiversTable = "user_unrecived_messages"
	// ReceiversInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	ReceiversInverseTable = "users"
	// SenderTable is the table that holds the sender relation/edge.
	SenderTable = "messages"
	// SenderInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	SenderInverseTable = "users"
	// SenderColumn is the table column denoting the sender relation/edge.
	SenderColumn = "user_undelivered_messages"
)

// Columns holds all SQL columns for message fields.
var Columns = []string{
	FieldID,
	FieldType,
	FieldContent,
	FieldTime,
	FieldLocalID,
	FieldCanBeDeleted,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "messages"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_undelivered_messages",
}

var (
	// ReceiversPrimaryKey and ReceiversColumn2 are the table columns denoting the
	// primary key for the receivers relation (M2M).
	ReceiversPrimaryKey = []string{"user_id", "message_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
